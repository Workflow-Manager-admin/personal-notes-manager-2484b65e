{"is_source_file": true, "format": "Python", "description": "This file contains database access functions for managing notes, including creation, retrieval, updating, deletion, and table setup, using SQLite as the backend database.", "external_files": [".models"], "external_methods": ["NoteCreate", "NoteInDB", "NoteUpdate"], "published": ["db_create_note", "db_get_notes", "db_get_note", "db_update_note", "db_delete_note"], "classes": [], "methods": [{"name": "get_db()", "description": "Context manager for establishing and closing a database connection.", "scope": "", "scopeKind": ""}, {"name": "create_tables()", "description": "Creates the notes table in the database if it does not already exist.", "scope": "", "scopeKind": ""}, {"name": "NoteInDB db_create_note(note: NoteCreate)", "description": "Inserts a new note into the database and returns the created note object.", "scope": "", "scopeKind": ""}, {"name": "List[NoteInDB] db_get_notes()", "description": "Retrieves all notes from the database, ordered by creation time descending.", "scope": "", "scopeKind": ""}, {"name": "Optional[NoteInDB] db_get_note(note_id: int)", "description": "Fetches a specific note by its ID, returning None if not found.", "scope": "", "scopeKind": ""}, {"name": "Optional[NoteInDB] db_update_note(note_id: int, note: NoteUpdate)", "description": "Updates an existing note with new data and returns the updated note object.", "scope": "", "scopeKind": ""}, {"name": "bool db_delete_note(note_id: int)", "description": "Deletes a note by ID, returning True if deletion was successful.", "scope": "", "scopeKind": ""}, {"name": "NoteInDB db_row_to_note(row: sqlite3.Row)", "description": "Converts a database row into a NoteInDB object.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "db.execute", "db.commit", "db_row_to_note", "create_tables", "datetime.utcnow", "datetime.fromisoformat"], "search-terms": ["notes database", "SQLite notes functions", "CRUD notes"], "state": 2, "file_id": 11, "knowledge_revision": 25, "git_revision": "b1a50409f63cae46aba6abe2ba01c228a924b6f4", "revision_history": [{"23": ""}, {"25": "b1a50409f63cae46aba6abe2ba01c228a924b6f4"}], "ctags": [{"_type": "tag", "name": "DB_PATH", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^DB_PATH = os.getenv(\"NOTES_DB_PATH\", \"notes.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_tables", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def create_tables():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "db_create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_create_note(note: NoteCreate) -> NoteInDB:$/", "language": "Python", "typeref": "typename:NoteInDB", "kind": "function", "signature": "(note: NoteCreate)"}, {"_type": "tag", "name": "db_delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_delete_note(note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(note_id: int)"}, {"_type": "tag", "name": "db_get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_get_note(note_id: int) -> Optional[NoteInDB]:$/", "language": "Python", "typeref": "typename:Optional[NoteInDB]", "kind": "function", "signature": "(note_id: int)"}, {"_type": "tag", "name": "db_get_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_get_notes() -> List[NoteInDB]:$/", "language": "Python", "typeref": "typename:List[NoteInDB]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "db_row_to_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_row_to_note(row: sqlite3.Row) -> NoteInDB:$/", "language": "Python", "typeref": "typename:NoteInDB", "kind": "function", "signature": "(row: sqlite3.Row)"}, {"_type": "tag", "name": "db_update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def db_update_note(note_id: int, note: NoteUpdate) -> Optional[NoteInDB]:$/", "language": "Python", "typeref": "typename:Optional[NoteInDB]", "kind": "function", "signature": "(note_id: int, note: NoteUpdate)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-2484b65e/notes_backend/src/api/db.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "fb2fa1eb12201de669bdafef057660d5", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/db.py", "fields": [{"name": "DB_PATH = os.getenv(\"NOTES_DB_PATH\", \"notes.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}